@model DoAnTotNghiep.Models.Post
<script src="~/Public/jquery-3.7.1.js"></script>

<div style="padding: 40px">
    <div class="row">
        <div class="col-md-6">
            <h4 class="fw-bold pb-3 mb-4"><span class="text-muted fw-light">Post /</span> Create</h4>
        </div>
        <div class="col-md-6 ">
            @*<div class="flex-row justify-content-end" style="display: flex">
                    <a class="btn btn-primary" style="margin-right: 10px" href="@Url.Action("Create")">Thêm mới</a>
                </div>*@
        </div>
    </div>
    <div class="card" style="padding: 20px">
        @using (Html.BeginForm("Create", "Post", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger " })
                <div class="row mb-3">
                    <div class="col-md-2">
                        <label class="control-label">Article Title</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Post_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Post_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger " })
                <div class="row mb-3">
                    <div class="col-md-2">
                        <label class="control-label">Description</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Post_Summary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Post_Summary, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger " })
                <div class="row mb-3">
                    <div class="col-md-2">
                        <label class="control-label">Category</label>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ID_CategoryP, ViewBag.Categories as SelectList, new { @class = "form-control select2" })
                        @Html.ValidationMessageFor(model => model.ID_CategoryP, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger " })
                <div class="row mb-3">
                    <div class="col-md-2">
                        <label class="control-label">Content</label>
                    </div>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Content, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger " })
                <div class="row mb-3">
                    <div class="col-md-2">
                        <label class="control-label">Category</label>
                    </div>
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Post_image, new { @class = "form-control" })
                        <input type="file" name="file" id="file" />
                        <div>
                            <img class="box-img" id="img" width="250" height="250" style="object-fit: cover" />
                        </div>
                        @Html.ValidationMessageFor(model => model.Post_image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        var editor = CKEDITOR.replace('Content', {
            customConfig: '/Public/plugin/ckeditor/config.js',
            height: 400,
            // filebrowserUploadUrl: '/admin/post/UploadCKEditor'
        })
    });

    const uploadImage = async (event) => {
        const file = event.target.files[0];
        const name = file.name;
        const base64 = await convertFileToBase64(file);
        $('#img').attr('src', base64);
        $('#Post_image').val(name + '|' + base64);
    };

    if (document.getElementById('file') != undefined) {
        document.getElementById('file').addEventListener("change", (e) => {
            uploadImage(e);
        });
    }

    function convertFileToBase64(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result);
            reader.onerror = reject;
        });
    }
</script>
